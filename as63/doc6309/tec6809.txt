□ﾌﾞﾗﾝﾁ命令

 ﾌﾗｸﾞ････ 変化無

      ｼｮｰﾄ/ﾛﾝｸﾞ   ｼｮｰﾄ   / ﾛﾝｸﾞ
                  〜  ＃   〜  ＃
bsr     8d/17     3    2 / 5    2
bra     20/16     7    2 / 9    3

条件ﾌﾞﾗﾝﾁ          〜    ＃   ｺｰﾄﾞ
              ｼｮｰﾄ 3      2   2?##      (##   8ﾋﾞｯﾄ ｵﾌｾｯﾄ )
              ﾛﾝｸﾞ 5/6    4   102?####  (#### 16ﾋﾞｯﾄ ｵﾌｾｯﾄ)

brn     21  never
bhi     22  (>)     c or z == 0
bls     23  (<=)    c or z == 1
bhs/bcc 24  (>=)    c == 0
blo/bcs 25  (<)     c == 1
bne     26  (!=)    z == 0
beq     27  (==)    z == 1
bvc     28  (v==0)  v == 0
bvs     29  (v==1)  v == 1
bpl     2a  (n==0)  n == 0
bmi     2b  (n==1)  n == 1
bge     2c  (.>=.)  n eor v == 0
blt     2d  (.<.)   n eor v == 1
bgt     2e  (.>.)   z or (n eor v) == 0
ble     2f  (.<=.)  z or (n eor v) == 1


skip1   brn#        3    1  ････  21
        bra *+2+1   3    2  ････  2001

skip2   cmpx#       4(3) 1  ****  8c
        bra *+2+2   3    2  ････  2002

-------------------------------------------------------------------------------
□ｼﾌﾄ命令
                                                  76543210
lsr                                    nzvc    0->OOOOOOOO->c
 lsra            44           2(1)  1  **･*
 lsrb            54           2(1)  1  **･*
 lsrd(lsra;rorb) 4456         4(2)  2  *X･*

ror                                            c->OOOOOOOO->c
 rora            46           2(1)  1  **･*
 rorb            56           2(1)  1  **･*
 rord(rora;rorb) 4656         4(2)  2  *X･*

asr                                         bit7->OOOOOOOO->c
 asra            47           2(1)  1  **･*
 asrb            57           2(1)  1  **･*
 asrd(asra;rorb) 4756         4(2)  2  *X･*

lsl/asl                                        c<-OOOOOOOO<-0
 asla            48           2(1)  1  ****
 aslb            58           2(1)  1  ****
 lsld(lslb;rola) 5849         4(2)  2  *XX*

rol                                            c<-OOOOOOOO<-c
 rola            49           2(1)  1  ****
 rolb            59           2(1)  1  ****
 rold(rolb;rola) 5949         4(2)  2  *XX*

        Dir 6    2  Ext 7    3  Ind 6+ 2+
lsr     04          74          64
ror     06          76          66
asr     07          77          67
asl/asl 08          78          68
rol     09          79          69


|~~~~~~~~~~~~|
+<-OOOOOOOO<-+                                        nzvc
a      lsla;adca #0             488900        4    3  *XX*
b      lsla;adca #0             58c900        4    3  *XX*
d      lslb;rola;adcb #0        5849c900      9    4  *XX*

|~~~~~~~~~~~~|
+->OOOOOOOO->+
a      lsra;bcc *+4;ora #$80     4424028a80    7    5  *X0*
b      lsrb;bcc *+4;orb #$80     542402da80    7    5  *X0*
d      lsra;rorb;bcc *+4;ora #80 445624028a80  9    6  *X0*



-------------------------------------------------------------------------------
□0比較
                       〜  ＃  nzvc
d==0    ( cmpd #0      5    4  ****  10830000 )
          subd #0      4    3  ****  830000
          std  -2,s    6    2  **0･  ed7e
          std  <dmy    5    2  **0･  dd??

x==0      cmpx #0      4    3  ****  8c0000
          stx  -2,s    6    2  **0･  af7e
          stx  <dmy    5    2  **0･  9f??
          leax ,x      4    2  ･*･･  3084

y==0      cmpy #0      5    4  ****  108c0000
          sty  -2,s    7    3  **0･  10af7e
          sty  <dmy    6    3  **0･  109f??
          leay ,y      4    2  ･*･･  31a4

u==0      cmpu #0      5    4  ****  11930000
          stu  -2,s    6    2  **0･  ef7e
          stu  <dmy    5    2  **0･  109f??


□代入
d=0       ldd  #0      3    3  010･  cc0000
          ldd  <Zero0  5    2  010･  dc??    <Zero0はDP内にある0の値の入ったﾒﾓﾘ
          clra;clrb    4    2  0100  4f5f

x=0       ldx  #0      3    3  010･  8e0000
(u=0)     ldx  <Zero0  5    2  010･  9e??

y=0       ldy  #0      4    4  010･  108e0000
(s=0)     ldy  <Zero0  6    3  010･  109e??

u=R       tfr  R,u     6    2  ････  1f?3    R: x y u s w pc
(s=R)     leau ,R      4    2  ････  32??

x=R       tfr  R,x     6    2  ････  1f?1
(y=R)     leax ,R      4    2  ･*･･  30??

a=[u+]    lda  ,u+     6    2  **0･
          pulu a       6    2  ････

d=[u++]   ldd  ,u++    8    2  **0･
          pulu d       7    2  ････

y=[s]     ldy  ,s      6    3  **0･  10aee4
          leay [,s]    7    2  ･*･･  31f4


-------------------------------------------------------------------------------
dﾚｼﾞｽﾀでの演算命令
comd      comb;coma          4    2  *X01  5343

negd      nega;negb;sbca #0  6    4  *XX*  40508200
          coma;comb;addd #1  8    5  ****  5343c30001
         (negb;ngca          4    2  *X**  禁断のコード)

???d: andd ord eord bitd adcd sbcd
                                Dir     Ext      Imm     Ind        nzvc
        ???b (low);???a (high)  8    4  10    6  4    4  8++    4++ *X+*

 * ただし､ ﾀﾞｲﾚｸﾄ･ﾓｰﾄﾞでの<$FFやｲﾝﾃﾞｯｸｽ･ﾓｰﾄﾞでのﾚｼﾞｽﾀ･ｵﾌｾｯﾄは不可能。
 　また comd,negd,andd,ord,eord,bitd,adcd,sbcdでのz-flag,v-flagの値は不定。

-------------------------------------------------------------------------------

＊　チェックらしいことはしてないので、あなたがで作成するときの参考程度にみて
　もらえれば幸いです。
　もし使うことがあればけっしてそのまま書移さないで自分で動作があってるか確かめ
　てください。クロック数の計算間違いは当然のこと、コードも移しまちがってること
　おおありでしょうから、信じてそのままfcbとかｿｰｽにうめこむと不幸がおとずれるか
　もしれません。
