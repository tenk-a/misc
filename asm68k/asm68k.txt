68000 absolute assembler



○ はじめに

2パスのアブソリュート・アセンブラです。
モトローラ社のＰＤＳの68Kアセンブラを改造したものです。
わたしの入手元は NIFTY fdevice.

もともとは、68Kシミュレータとのセットだったけど、
とりあえず改造はアセンブラのみなので、これのみ。

元のものからの変更点は
　・S-FORMATだけでなく、バイナリ生成やＣソース生成可能に.
　・大文字小文字の区別可能に。
　・include 可能に。
　・数値表現/式評価を若干変更
そのたもろもろだと思います^^;

実行環境は bcc32 でコンパイルしているので、win95/nt下のみ。
ただし watcom-c/386 とかまたは16ビットDOS用コンパイラでリコンパイル
すれば、dos 環境でも okでしょう。


　なお、このテキストはめもがきで、基本的には元ドキュメント
asm.doc もみたってください（て、英語なんで自分だってちゃんと
みてなかったりしますが^^;)



○ 使い方

  Usage: asm68k [-opts] infile.ext
    -y   ラベルの大文字小文字を区別する
    -n   S-FORMATファイルを生成(infile.h68)
    -b   バイナリファイルを生成(infile.bin)
    -g   バイナリファイルとラベル／アドレス一覧ファイルを生成
    -cN  C ソースファイルを生成 (infile.c)
         N= 1:BYTE 2:WORD 4:DWORD
    -l   リストファイルを出力(infile.lst)
    -d   リスト表示で DCディレクィブの値をすべて表示

 拡張子は省略できません。
 -y を付けない限りラベルの大文字小文字は同一視します。


  -g について
    ソース中の、ラベル指定で
        LABEL::
  と :: で指定すれば、そのラベルはglobal名ぽく扱い、-g でバイナリ生成
  すると、一緒に .int という拡張子のテキストファイルができ、その中身は
        ::で指定したラベル名    アドレス
  を列挙したものになります。



○コメント
  行頭で * ; // で始まる行はコメントとみなします。
  歴史的な仕様のため、必要分の命令/オペランドのあとに空白をあけて文字列
  があればそれはコメントです(だもんで、オペランドの途中に見易さのための
  空白を入れることはできません）


○整数
　モトローラ系の一般的な表記、
        16進数  $01f3
         2進数  %0111
         8進数  @0377
　にくわえインテル系アセンブラに多い表記
        16進数  01f3h
         2進数  0111b
　も使えます。またｃ言語の表記
        16進数  0x01f3
　も使えます。
　'A'のように'で囲めばその文字コードを値とします。


○ラベル
　　アルファベットか'.'で始まり,  アルファベット、'.'、数字、'_'、'@'
　からなります。

　　-y オプションが指定されてない限り、大文字小文字は区別されません。



○演算子
　使える演算子は
　単項: + - ~
  二項: + - * / \ & ! >> <<
        \ はＣ言語での % である余算.
        ! はＣ言語での | である or
  あと () です。

　行頭のアドレスを保持するものとして * があります。



○命令、オペランド
　一般的な 68k アセンブラの通りです^^;
　元ドキュメントの asm.doc や某かを参考にしてください。


○擬似命令
        include filename
                ファイル filename を読み込みます。
        align {2|4|8|16}
                指定バイト単位にアドレスの境界を調整します.
        even
                align 2 に同じ

        dc
                直接データを置く
        ds      N
                指定したサイズ N個の領域を確保
        end
                ソース終了
        equ
                ラベル定義
        org     ADDR
                アドレス ADDR よりコード/データを配置.
        set
                再設定可能なラベル定義


  以下の命令は機能しませんがエラーにはしないようにしてます。
        chip
        list
        nolist
        sect
        ttl
        xref
        xdef



○おわりに

　自分の使う機能のために改造ほどこしてたので、一般的でないものも
　ある... 逆に自分の使わない機能に関してはどうなってるか不明かも。
　（大丈夫なはずなんですが... S-FORMAT 出力とか...)

  元が PDS なんでこれも PDS です。


                                        M.Kitamura
